import { useState, useEffect } from "react";
import "./App.css";
import Media from "./Media.jsx";
import NavBar from "./NavBar.jsx";
import { getMediaData, getSearchData } from "./api.js";

function App() {
  const [type, setType] = useState("movie");
  const [randomPoster, setRandomPoster] = useState(null);
  const [searchResults, setSearchResults] = useState(null);

  const titlesByType = {
    movie: [
      "üé¨ ÏßÄÍ∏à ÏÉÅÏòÅ Ï§ë",
      "üî• Ïù∏Í∏∞ ÏΩòÌÖêÏ∏†",
      "üíé Î™ÖÏûë Ïª¨Î†âÏÖò",
      "‚ú® Í∞úÎ¥â ÏòàÏ†ïÏûë",
    ],
    tv: [
      "üì∫ Ïò§Îäò Î∞©ÏòÅÌïòÎäî ÏãúÎ¶¨Ï¶à",
      "‚ú® ÏßÄÍ∏à Î∞©ÏòÅ Ï§ë",
      "üî• Ïù∏Í∏∞ ÏãúÎ¶¨Ï¶à",
      "üíé Î™ÖÏûë Ïª¨Î†âÏÖò",
    ],
  };

  const movieEndpoints = ["now_playing", "popular", "top_rated", "upcoming"];
  const tvEndpoints = ["airing_today", "on_the_air", "popular", "top_rated"];

  //Í≤ÄÏÉâ Í∏∞Îä•
  const handleSearch = async (query) => {
    if (!query) return;

    const { results } = await getSearchData({ query, type });
    setSearchResults(results);
  };

  const fetchRandomPoster = async () => {
    const endpoint = type === "movie" ? "now_playing" : "airing_today";
    const { results } = await getMediaData({ type, endpoint, page: 1 });
    const filtered = results.filter((item) => item.poster_path);
    const random = filtered[Math.floor(Math.random() * filtered.length)];
    setRandomPoster(random.poster_path);
  };

  const handleTypeChange = (newType) => {
    setType(newType);
    setSearchResults(null); // Í≤ÄÏÉâ Í≤∞Í≥º Ï¥àÍ∏∞Ìôî
  };

  useEffect(() => {
    fetchRandomPoster();
  }, [type]);

  return (
    <>
      <NavBar
        onTypeChange={handleTypeChange}
        selectedType={type}
        onSearch={handleSearch}
      />
      <div className="app-wraper" style={{ position: "relative" }}>
        <div className="main-img">
          {randomPoster && (
            <img
              src={`https://image.tmdb.org/t/p/w1280${randomPoster}`}
              alt="ÎûúÎç§ Ìè¨Ïä§ÌÑ∞"
            />
          )}
        </div>
      </div>
      <div className="container">
        {searchResults ? (
          <>
            <div className="carousel-container">
              <h3 className="carousel-title">Í≤ÄÏÉâ Í≤∞Í≥º</h3>
              <div className="carousel">
                {searchResults.map((item) => {
                  return (
                    <div key={item.id}>
                      <a
                        href={`https://www.themoviedb.org/${type}/${item.id}`}
                        target="_blank"
                      >
                        {item.poster_path && (
                          <img
                            src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}
                            alt="Ìè¨Ïä§ÌÑ∞"
                          ></img>
                        )}
                      </a>
                    </div>
                  );
                })}
              </div>
            </div>
          </>
        ) : (
          // Í≤ÄÏÉâ Í≤∞Í≥º ÏóÜÏùÑ Îïê Í∏∞Ï°¥ Î¶¨Ïä§Ìä∏ Î≥¥Ïó¨Ï£ºÍ∏∞
          <>
            {movieEndpoints.map((endpoint, idx) => (
              <Media
                key={endpoint}
                title={titlesByType[type][idx]}
                type={type}
                endpoint={
                  type === "movie" ? movieEndpoints[idx] : tvEndpoints[idx]
                }
              />
            ))}
          </>
        )}
      </div>
    </>
  );
}

export default App;
